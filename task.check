note: <<<
note: check if required fields are set
note: >>>

note:
note: maintainer
note: ==========
note: Should be a well-formatted, 
note: example is: maintainer="John Snow <john_snow@thewall.net>"


within: ^^ "maintainer=" (.*) $$
regexp: "=" \" (.*) \"

generator: <<RAKU
!raku
  if matched() {
    say "note: maintainer line found: ", capture()[0] 
  } else {
    say "assert: 0 maintainer line found";
  }
RAKU

regexp: "=" \" (<[ \w \s ] >+?) "<" (<[ \w \. ] > + \@ <[ \w \. ] > + ) ">" \" \s* $$ 

generator: <<RAKU
!raku
  if matched() {
    say "note: Name: ", capture()[0]; 
    say "note: Email: ", capture()[1];
    if capture()[0] ~~ /\S/ {
      say "assert: 1 maintainer line is not broken";
    } else {
      say "note: empty Name";
      say "assert: 0 maintainer line is not broken";
    }
  } else {
    say "assert: 0 maintainer line is not broken";
  }
RAKU

end:


note: check pkgrel
regexp: ^^ \s* "pkgrel=" (\d+) \s* $$

generator: <<RAKU
!raku
  if matched() {
    my $pkgv = capture()[0];
    say "note: pkgrel line found: ", $pkgv;
    if "$pkgv".Int > config()<pkgrel> {
      say "assert: 1 pkgrel version ($pkgv) is greater then current version: {config()<pkgrel>}";
    } else {
      say "assert: 0 pkgrel version ($pkgv) is greater then current version: {config()<pkgrel>}";
    }
  } else {
    say "assert: 0 pkgrel line found";
  }
RAKU
